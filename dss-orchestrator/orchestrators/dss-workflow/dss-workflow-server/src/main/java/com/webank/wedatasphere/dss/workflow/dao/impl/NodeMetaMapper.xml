<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2019 WeBank
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.webank.wedatasphere.dss.workflow.dao.NodeMetaMapper">
    <resultMap id="nodeMetaResultMap" type="com.webank.wedatasphere.dss.workflow.dto.NodeMetaDO">
        <id property="id" column="id"/>
        <result property="orchestratorId" column="orchestrator_id"/>
        <result property="proxyUser" column="proxy_user"/>
        <result property="resource" column="resource"/>
        <result property="globalVar" column="global_var"/>
    </resultMap>

    <sql id="baseColumns">
        `id`, `orchestrator_id`, `proxy_user`, `resource`, `global_var`
    </sql>

    <insert id="insertNodeMeta" parameterType="com.webank.wedatasphere.dss.workflow.dto.NodeMetaDO">
        INSERT INTO dss_workflow_node_meta(`id`, `orchestrator_id`, `proxy_user`, `resource`, `global_var`)
        VALUES (#{id}, #{orchestratorId}, #{proxyUser}, #{resource}, #{globalVar})
    </insert>

    <update id="updateNodeMeta" parameterType="com.webank.wedatasphere.dss.workflow.dto.NodeMetaDO">
        UPDATE dss_workflow_node_meta
        SET `orchestrator_id` = #{orchestratorId},
        `proxy_user` = #{proxyUser},
        `resource` = #{resource}
        `global_var` = #{globalVar}
        WHERE `id` = #{id}
    </update>

    <select id="getNodeMetaByOrchestratorId" parameterType="java.lang.Long" resultMap="nodeMetaResultMap">
        SELECT <include refid="baseColumns"/> FROM dss_workflow_node_meta WHERE orchestrator_id = #{orchestratorId}
    </select>

    <select id="getOrchestratorMeta" resultType="com.webank.wedatasphere.dss.workflow.entity.OrchestratorMeta">
        select t1.id as id
              ,t1.orchestrator_id as orchestratorId
              ,t1.global_var      as globalVar
              ,t1.resource        as resource
              ,t1.proxy_user      as proxyUser
              ,t2.project_name    as projectName
              ,t2.name            as workflowName
              ,t2.desc            as workflowDesc
              ,t2.uuid            as workflowId
              ,t2.status          as status
              ,t3.version         as version
              ,t3.update_time     as updateTime
              ,t4.template_name   as templateTime
        from dss_workflow_node_meta t1
        join
        (select a.name,a.desc,a.uuid,a.status
        ,a.project_id,b.workspace_id
        ,b.name as project_name
        from  dss_orchestrator_info  a
        join  dss_project b  on a.project_id  = b.id and b.workspace_id = #{workspaceId}
        ) t2 on t1.orchestrator_id = t2.id
        join
        (select orchestrator_id
        ,substring_index(group_concat(version order by update_time desc),',',1) as version
        ,substring_index(group_concat(update_time ORDER BY update_time desc), ',', 1)  as update_time
        from dss_orchestrator_version_info
        where valid_flag  = 1
        group by orchestrator_id
        ) t3 on t1.orchestrator_id  = t3.orchestrator_id
        left join
        (select  a.orchestrator_id ,group_concat(b.name) as template_name from dss_workflow_default_template  a
          join dss_ec_config_template  b on a.template_id  = b.template_id
          group by orchestrator_id
        ) t4 on t1.orchestrator_id = t4.orchestrator_id

    </select>

</mapper>